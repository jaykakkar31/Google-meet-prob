{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\client\\\\src\\\\components\\\\Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport MeetingHeader from \"./meetingHeader\";\nimport MeetingFooter from \"./meetingFooter\";\nimport MeetingInfo from \"./meetingInfo\";\nimport Alert from \"./alert\";\nimport Messenger from \"./messenger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vidStyle = {\n  // height: \"\",\n  // borderRadius:\"10px\"\n  height: `264.15px`,\n  // width: \"639.9px\",\n  padding: \"10px\",\n  paddingBottom: \"5px\"\n};\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  console.log(\"VIDEO CALLED\");\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      console.log(\"ENTE0RD\" + stream);\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    // style={{ height: `${height}%`, width: `${width}%` }}\n    style: vidStyle,\n    muted: true,\n    ref: ref,\n    autoPlay: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Video;\nlet peer = null;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = ({\n  id,\n  isAdmin,\n  setMeetingInfoPopUp,\n  url,\n  meetingInfoPopUp\n}) => {\n  _s2();\n\n  const [isMessenger, setMessenger] = useState(false);\n  const numUsers = useRef();\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const screenStream = useRef();\n  const roomID = id;\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [isPresenting, setIsPresenting] = useState();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:9000\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      setStreamObj(stream);\n      userVideo.current.srcObject = stream;\n      console.log(\"USERVIDEO\" + stream); // LOGIC THAT USER HAS JOINED THE ROOM\n      //THIS EVENT Is NOT CACHED AT BACKEND\n      //.emit means sending  to backend\n\n      socketRef.current.emit(\"JOINED ROOM\");\n      socketRef.current.emit(\"join room\", roomID); // Recieve users from backened\n      // if (!props.isAdmin) {\n\n      socketRef.current.on(\"all users\", users => {\n        //peers is for how many videos are rendering\n        console.log(users.length);\n        numUsers.current = users.length + 1;\n        const peersForVideo = [];\n        users.forEach(userID => {\n          console.log(userID + \" USER ID OF USER IN THE ROOM \");\n          console.log(socketRef.current); //socketRef.current.id is the of user currently joined\n          // UserID  id's of all those inside the meeting\n\n          const peer = createPeer(userID, socketRef.current.id, stream); //peersRef is for which is having connection with which\n\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peersForVideo.push(peer);\n        });\n        setPeers(peersForVideo);\n        console.log(peers);\n      }); //PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\n      //.on means recieving from backend\n\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        // signal has been send to multiple now multiple users are sending back the signal to caller\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        console.log(item);\n        item.peer.signal(payload.signal);\n      }); // }\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    console.log(\"CREATE PEER\");\n    const peer = new Peer({\n      initiator: true,\n      //trickle wait for all the data to send makes it slow\n      trickle: false,\n      stream\n    }); //generates signal\n    //sending to backend\n\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    console.log(\"Add Peer\");\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    }); // 1 accepting the incoming signal that this will return the signal\n\n    peer.signal(incomingSignal);\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    return peer;\n  }\n\n  const screenShare = () => {\n    console.log(\"CLICKED SCREEN SHARE\"); // peers.map((peer, index) => {\n    // console.log(index);\n\n    navigator.mediaDevices.getDisplayMedia({\n      cursor: true\n    }).then(screenStream => {\n      screenStream.current = screenStream;\n      peers[0].replaceTrack(streamObj.getVideoTracks()[0], screenStream.getVideoTracks()[0], streamObj);\n      setScreenCastStream(screenStream);\n\n      screenStream.getTracks()[0].onended = () => {\n        peer[0].replaceTrack(screenStream.getVideoTracks()[0], streamObj.getVideoTracks()[0], streamObj);\n      };\n\n      setIsPresenting(true);\n    }); // });\n  };\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach(function (track) {\n      track.stop();\n    });\n    peer.replaceTrack(screenCastStream.getVideoTracks()[0], streamObj.getVideoTracks()[0], streamObj);\n    setIsPresenting(false);\n  }; // const height = 100 / numUsers.current;\n  // console.log(numUsers.current);\n  // const width = 100 / numUsers.current;\n  // console.log(\"PEERS \" + JSON.stringify(peers));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"videoScreen\",\n    children: [isPresenting ? /*#__PURE__*/_jsxDEV(\"video\", {\n      // style={{ height: \"calc(100vh -90px)\", width: \"100%\" }}\n      ref: screenStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        // style={{ height: `${height}%`, width: `${width}%` }}\n        style: vidStyle,\n        muted: true,\n        ref: userVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video // height={height}\n        // width={width}\n        , {\n          peer: peer,\n          numUsers: numUsers.current\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 8\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetingHeader, {\n      setMessenger: setMessenger,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetingFooter, {\n      isPresenting: isPresenting,\n      screenShare: screenShare,\n      stopScreenShare: stopScreenShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, this), isAdmin && meetingInfoPopUp && /*#__PURE__*/_jsxDEV(MeetingInfo, {\n      url: url,\n      setMeetingInfoPopUp: setMeetingInfoPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }, this), isMessenger ? /*#__PURE__*/_jsxDEV(Messenger, {\n      setMessenger: setMessenger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Room, \"EBKiqFYf1VmrRt0twKyVEw1nJLo=\");\n\n_c2 = Room;\nexport default Room;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/client/src/components/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","MeetingHeader","MeetingFooter","MeetingInfo","Alert","Messenger","vidStyle","height","padding","paddingBottom","Video","props","ref","console","log","peer","on","stream","current","srcObject","videoConstraints","window","innerHeight","width","innerWidth","Room","id","isAdmin","setMeetingInfoPopUp","url","meetingInfoPopUp","isMessenger","setMessenger","numUsers","peers","setPeers","socketRef","userVideo","peersRef","screenStream","roomID","streamObj","setStreamObj","screenCastStream","setScreenCastStream","isPresenting","setIsPresenting","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","length","peersForVideo","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","screenShare","getDisplayMedia","cursor","replaceTrack","getVideoTracks","getTracks","onended","stopScreenShare","track","stop","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport MeetingHeader from \"./meetingHeader\";\r\nimport MeetingFooter from \"./meetingFooter\";\r\nimport MeetingInfo from \"./meetingInfo\";\r\nimport Alert from \"./alert\";\r\nimport Messenger from \"./messenger\";\r\n\r\nconst vidStyle = {\r\n\t// height: \"\",\r\n\t// borderRadius:\"10px\"\r\n\theight: `264.15px`,\r\n\t// width: \"639.9px\",\r\n\tpadding: \"10px\",\r\n\tpaddingBottom: \"5px\",\r\n};\r\n\r\nconst Video = (props) => {\r\n\tconst ref = useRef();\r\n\tconsole.log(\"VIDEO CALLED\");\r\n\tuseEffect(() => {\r\n\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\tref.current.srcObject = stream;\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\t// style={{ height: `${height}%`, width: `${width}%` }}\r\n\t\t\tstyle={vidStyle}\r\n\t\t\tmuted\r\n\t\t\tref={ref}\r\n\t\t\tautoPlay\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nlet peer = null;\r\n\r\nconst videoConstraints = {\r\n\theight: window.innerHeight / 2,\r\n\twidth: window.innerWidth / 2,\r\n};\r\n\r\nconst Room = ({ id, isAdmin, setMeetingInfoPopUp, url, meetingInfoPopUp }) => {\r\n\tconst [isMessenger, setMessenger] = useState(false);\r\n\r\n\tconst numUsers = useRef();\r\n\tconst [peers, setPeers] = useState([]);\r\n\tconst socketRef = useRef();\r\n\tconst userVideo = useRef();\r\n\tconst peersRef = useRef([]);\r\n\tconst screenStream = useRef();\r\n\tconst roomID = id;\r\n\tconst [streamObj, setStreamObj] = useState();\r\n\tconst [screenCastStream, setScreenCastStream] = useState();\r\n\tconst [isPresenting, setIsPresenting] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tsocketRef.current = io.connect(\"http://localhost:9000\");\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getUserMedia({ video: videoConstraints, audio: true })\r\n\t\t\t.then((stream) => {\r\n\t\t\t\tsetStreamObj(stream);\r\n\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\tconsole.log(\"USERVIDEO\" + stream);\r\n\t\t\t\t// LOGIC THAT USER HAS JOINED THE ROOM\r\n\r\n\t\t\t\t//THIS EVENT Is NOT CACHED AT BACKEND\r\n\t\t\t\t//.emit means sending  to backend\r\n\t\t\t\tsocketRef.current.emit(\"JOINED ROOM\");\r\n\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\t// Recieve users from backened\r\n\t\t\t\t// if (!props.isAdmin) {\r\n\r\n\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\t//peers is for how many videos are rendering\r\n\t\t\t\t\tconsole.log(users.length);\r\n\t\t\t\t\tnumUsers.current = users.length + 1;\r\n\t\t\t\t\tconst peersForVideo = [];\r\n\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\tconsole.log(socketRef.current);\r\n\t\t\t\t\t\t//socketRef.current.id is the of user currently joined\r\n\t\t\t\t\t\t// UserID  id's of all those inside the meeting\r\n\r\n\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\t//peersRef is for which is having connection with which\r\n\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tpeersForVideo.push(peer);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetPeers(peersForVideo);\r\n\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t});\r\n\t\t\t\t//PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\r\n\t\t\t\t//.on means recieving from backend\r\n\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\r\n\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t});\r\n\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\t// signal has been send to multiple now multiple users are sending back the signal to caller\r\n\t\t\t\t\tconst item = peersRef.current.find((p) => p.peerID === payload.id);\r\n\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t});\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\tconsole.log(\"CREATE PEER\");\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: true,\r\n\t\t\t//trickle wait for all the data to send makes it slow\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\t\t//generates signal\r\n\t\t//sending to backend\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\tuserToSignal,\r\n\t\t\t\tcallerID,\r\n\t\t\t\tsignal,\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn peer;\r\n\t}\r\n\r\n\tfunction addPeer(incomingSignal, callerID, stream) {\r\n\t\tconsole.log(\"Add Peer\");\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: false,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\t\t// 1 accepting the incoming signal that this will return the signal\r\n\t\tpeer.signal(incomingSignal);\r\n\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t});\r\n\t\treturn peer;\r\n\t}\r\n\r\n\tconst screenShare = () => {\r\n\t\tconsole.log(\"CLICKED SCREEN SHARE\");\r\n\t\t// peers.map((peer, index) => {\r\n\t\t// console.log(index);\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getDisplayMedia({ cursor: true })\r\n\t\t\t.then((screenStream) => {\r\n\t\t\t\tscreenStream.current = screenStream;\r\n\t\t\t\tpeers[0].replaceTrack(\r\n\t\t\t\t\tstreamObj.getVideoTracks()[0],\r\n\t\t\t\t\tscreenStream.getVideoTracks()[0],\r\n\t\t\t\t\tstreamObj\r\n\t\t\t\t);\r\n\t\t\t\tsetScreenCastStream(screenStream);\r\n\t\t\t\tscreenStream.getTracks()[0].onended = () => {\r\n\t\t\t\t\tpeer[0].replaceTrack(\r\n\t\t\t\t\t\tscreenStream.getVideoTracks()[0],\r\n\t\t\t\t\t\tstreamObj.getVideoTracks()[0],\r\n\t\t\t\t\t\tstreamObj\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\t\t\t\tsetIsPresenting(true);\r\n\t\t\t});\r\n\t\t// });\r\n\t};\r\n\tconst stopScreenShare = () => {\r\n\t\tscreenCastStream.getVideoTracks().forEach(function (track) {\r\n\t\t\ttrack.stop();\r\n\t\t});\r\n\t\tpeer.replaceTrack(\r\n\t\t\tscreenCastStream.getVideoTracks()[0],\r\n\t\t\tstreamObj.getVideoTracks()[0],\r\n\t\t\tstreamObj\r\n\t\t);\r\n\t\tsetIsPresenting(false);\r\n\t};\r\n\t// const height = 100 / numUsers.current;\r\n\t// console.log(numUsers.current);\r\n\t// const width = 100 / numUsers.current;\r\n\r\n\t// console.log(\"PEERS \" + JSON.stringify(peers));\r\n\treturn (\r\n\t\t<div class=\"videoScreen\">\r\n\t\t\t{isPresenting ? (\r\n\t\t\t\t<video\r\n\t\t\t\t\t// style={{ height: \"calc(100vh -90px)\", width: \"100%\" }}\r\n\t\t\t\t\tref={screenStream}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{/* {numUsers.current === 1 ? (\r\n\t\t\t\t\t\t<video\r\n\t\t\t\t\t\t\tstyle={{ height: `${height}%`, width: `${width}%` }}\r\n\t\t\t\t\t\t\t// style={vidStyle}\r\n\t\t\t\t\t\t\tmuted\r\n\t\t\t\t\t\t\tref={userVideo}\r\n\t\t\t\t\t\t\tautoPlay\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : ( */}\r\n\t\t\t\t\t<video\r\n\t\t\t\t\t\t// style={{ height: `${height}%`, width: `${width}%` }}\r\n\t\t\t\t\t\tstyle={vidStyle}\r\n\t\t\t\t\t\tmuted\r\n\t\t\t\t\t\tref={userVideo}\r\n\t\t\t\t\t\tautoPlay\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* )} */}\r\n\t\t\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Video\r\n\t\t\t\t\t\t\t\t// height={height}\r\n\t\t\t\t\t\t\t\t// width={width}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tpeer={peer}\r\n\t\t\t\t\t\t\t\tnumUsers={numUsers.current}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<MeetingHeader setMessenger={setMessenger} id={id} />\r\n\t\t\t<MeetingFooter\r\n\t\t\t\tisPresenting={isPresenting}\r\n\t\t\t\tscreenShare={screenShare}\r\n\t\t\t\tstopScreenShare={stopScreenShare}\r\n\t\t\t/>\r\n\t\t\t{isAdmin && meetingInfoPopUp && (\r\n\t\t\t\t<MeetingInfo url={url} setMeetingInfoPopUp={setMeetingInfoPopUp} />\r\n\t\t\t)}\r\n\t\t\t{isMessenger ? <Messenger setMessenger={setMessenger} /> : <Alert />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}