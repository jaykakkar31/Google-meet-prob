{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\client\\\\src\\\\components\\\\vedioPage.js\",\n    _s3 = $RefreshSig$();\n\nimport react, { useState, useEffect, useReducer, useRef } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport MeetingHeader from \"./meetingHeader\";\nimport MeetingFooter from \"./meetingFooter\";\nimport MeetingInfo from \"./meetingInfo\";\nimport styled from \"styled-components\";\nimport Messenger from \"./messenger\";\nimport Alert from \"./alert\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoPage() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const isAdmin = window.location.hash === \"#init\" ? true : false; //#init\n  // console.log(window.location.hash);\n\n  const {\n    id\n  } = useParams(); // let peer = null;\n\n  const url = `${window.location.origin}${window.location.pathname}`;\n  const [meetingInfoPopUp, setMeetingInfoPopUp] = useState(false);\n  const [isMessenger, setMessenger] = useState(false);\n  useEffect(() => {\n    if (isAdmin) {\n      setMeetingInfoPopUp(true);\n    }\n  }, []);\n  const vidStyle = {\n    // height: \"calc(50vh -90px)\",\n    // borderRadius:\"10px\"\n    height: \"45%\",\n    width: \"45%\",\n    padding: \"10px\",\n    paddingBottom: \"5px\"\n  };\n\n  const Video = props => {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      console.log(props.peer);\n      props.peer.on(\"stream\", stream => {\n        console.log(\"ENTE0RD\" + stream);\n        ref.current.srcObject = stream;\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"video\", {\n      style: vidStyle,\n      autoPlay: true,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this);\n  };\n\n  _s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  const videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n  };\n\n  const Room = props => {\n    _s2();\n\n    const numUsers = useRef();\n    const [peers, setPeers] = useState([]);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const roomID = props.id;\n    useEffect(() => {\n      socketRef.current = io.connect(\"http://localhost:9000\");\n      navigator.mediaDevices.getUserMedia({\n        video: videoConstraints,\n        audio: true\n      }).then(stream => {\n        userVideo.current.srcObject = stream;\n        console.log(\"USERVIDEO\" + stream); // LOGIC THAT USER HAS JOINED THE ROOM\n        //THIS EVENT Is NOT CACHED AT BACKEND\n        //.emit means sending  to backend\n\n        socketRef.current.emit(\"JOINED ROOM\");\n        socketRef.current.emit(\"join room\", roomID); // Recieve users from backened\n\n        if (!props.isAdmin) {\n          socketRef.current.on(\"all users\", users => {\n            //peers is for how many videos are rendering\n            console.log(users.length);\n            numUsers.current = users.length + 1;\n            const peersForVideo = [];\n            users.forEach(userID => {\n              console.log(userID + \" USER ID OF USER IN THE ROOM \");\n              console.log(socketRef.current); //socketRef.current.id is the of user currently joined\n              // UserID  id's of all those inside the meeting\n\n              const peer = createPeer(userID, socketRef.current.id, stream); //peersRef is for which is having connection with which\n\n              peersRef.current.push({\n                peerID: userID,\n                peer\n              });\n              peersForVideo.push(peer);\n            });\n            setPeers(peersForVideo);\n            console.log(peers);\n          }); //PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\n          //.on means recieving from backend\n\n          socketRef.current.on(\"user joined\", payload => {\n            const peer = addPeer(payload.signal, payload.callerID, stream);\n            peersRef.current.push({\n              peerID: payload.callerID,\n              peer\n            });\n            setPeers(users => [...users, peer]);\n          });\n          socketRef.current.on(\"receiving returned signal\", payload => {\n            // signal has been send to multiple now multiple users are sending back the signal to caller\n            const item = peersRef.current.find(p => p.peerID === payload.id);\n            console.log(item);\n            item.peer.signal(payload.signal);\n          });\n        }\n      });\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n      console.log(\"CREATE PEER\");\n      const peer = new Peer({\n        initiator: true,\n        //trickle wait for all the data to send makes it slow\n        trickle: false,\n        stream\n      }); //generates signal\n      //sending to backend\n\n      peer.on(\"signal\", signal => {\n        socketRef.current.emit(\"sending signal\", {\n          userToSignal,\n          callerID,\n          signal\n        });\n      });\n      return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n      console.log(\"Add Peer\");\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream\n      }); // 1 accepting the incoming signal that this will return the signal\n\n      peer.signal(incomingSignal);\n      peer.on(\"signal\", signal => {\n        socketRef.current.emit(\"returning signal\", {\n          signal,\n          callerID\n        });\n      });\n      return peer;\n    } // console.log(\"PEERS \" + JSON.stringify(peers));\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: vidStyle,\n        muted: true,\n        ref: userVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this);\n  };\n\n  _s2(Room, \"J6hlwmxX+ChjvgV8u4gyYhED/hs=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"videoScreen\",\n    children: [/*#__PURE__*/_jsxDEV(MeetingHeader, {\n      setMessenger: setMessenger // peers={peers}\n      // userVideo={userVideo}\n      // Video={Video}\n      ,\n      isAdmin: isAdmin,\n      id: id,\n      Room: Room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetingFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 4\n    }, this), isAdmin && meetingInfoPopUp && /*#__PURE__*/_jsxDEV(MeetingInfo, {\n      url: url,\n      setMeetingInfoPopUp: setMeetingInfoPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this), isMessenger ? /*#__PURE__*/_jsxDEV(Messenger, {\n      setMessenger: setMessenger // messageList={messageList}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(VideoPage, \"Xae22M79kcI6o3IfuV3ThdO4rXM=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoPage;\nexport default VideoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/client/src/components/vedioPage.js"],"names":["react","useState","useEffect","useReducer","useRef","useParams","useHistory","MeetingHeader","MeetingFooter","MeetingInfo","styled","Messenger","Alert","Peer","io","VideoPage","isAdmin","window","location","hash","id","url","origin","pathname","meetingInfoPopUp","setMeetingInfoPopUp","isMessenger","setMessenger","vidStyle","height","width","padding","paddingBottom","Video","props","ref","console","log","peer","on","stream","current","srcObject","videoConstraints","innerHeight","innerWidth","Room","numUsers","peers","setPeers","socketRef","userVideo","peersRef","roomID","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","length","peersForVideo","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import react, { useState, useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport MeetingHeader from \"./meetingHeader\";\r\nimport MeetingFooter from \"./meetingFooter\";\r\nimport MeetingInfo from \"./meetingInfo\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Messenger from \"./messenger\";\r\nimport Alert from \"./alert\";\r\nimport Peer from \"simple-peer\";\r\nimport io from \"socket.io-client\";\r\nfunction VideoPage() {\r\n\tconst isAdmin = window.location.hash === \"#init\" ? true : false;\r\n\r\n\t//#init\r\n\t// console.log(window.location.hash);\r\n\r\n\tconst { id } = useParams();\r\n\r\n\t// let peer = null;\r\n\tconst url = `${window.location.origin}${window.location.pathname}`;\r\n\r\n\tconst [meetingInfoPopUp, setMeetingInfoPopUp] = useState(false);\r\n\tconst [isMessenger, setMessenger] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isAdmin) {\r\n\t\t\tsetMeetingInfoPopUp(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\r\n\r\n\tconst vidStyle = {\r\n\t\t// height: \"calc(50vh -90px)\",\r\n\t\t// borderRadius:\"10px\"\r\n\t\theight: \"45%\",\r\n\t\twidth: \"45%\",\r\n\r\n\t\tpadding: \"10px\",\r\n\t\tpaddingBottom: \"5px\",\r\n\t};\r\n\r\n\tconst Video = (props) => {\r\n\t\tconst ref = useRef();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconsole.log(props.peer);\r\n\t\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\t\tref.current.srcObject = stream;\r\n\t\t\t});\r\n\t\t}, []);\r\n\r\n\t\treturn <video style={vidStyle} autoPlay ref={ref} />;\r\n\t};\r\n\r\n\tconst videoConstraints = {\r\n\t\theight: window.innerHeight / 2,\r\n\t\twidth: window.innerWidth / 2,\r\n\t};\r\n\r\n\tconst Room = (props) => {\r\n\t\tconst numUsers = useRef();\r\n\t\tconst [peers, setPeers] = useState([]);\r\n\t\tconst socketRef = useRef();\r\n\t\tconst userVideo = useRef();\r\n\t\tconst peersRef = useRef([]);\r\n\t\tconst roomID = props.id;\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsocketRef.current = io.connect(\"http://localhost:9000\");\r\n\t\t\tnavigator.mediaDevices\r\n\t\t\t\t.getUserMedia({ video: videoConstraints, audio: true })\r\n\t\t\t\t.then((stream) => {\r\n\t\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\t\tconsole.log(\"USERVIDEO\" + stream);\r\n\t\t\t\t\t// LOGIC THAT USER HAS JOINED THE ROOM\r\n\r\n\t\t\t\t\t//THIS EVENT Is NOT CACHED AT BACKEND\r\n\t\t\t\t\t//.emit means sending  to backend\r\n\t\t\t\t\tsocketRef.current.emit(\"JOINED ROOM\");\r\n\t\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\t\t// Recieve users from backened\r\n\t\t\t\t\tif (!props.isAdmin) {\r\n\t\t\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\t\t\t//peers is for how many videos are rendering\r\n\t\t\t\t\t\t\tconsole.log(users.length);\r\n\t\t\t\t\t\t\tnumUsers.current = users.length + 1;\r\n\t\t\t\t\t\t\tconst peersForVideo = [];\r\n\t\t\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\t\t\tconsole.log(socketRef.current);\r\n\t\t\t\t\t\t\t\t//socketRef.current.id is the of user currently joined\r\n\t\t\t\t\t\t\t\t// UserID  id's of all those inside the meeting\r\n\r\n\t\t\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\t\t\t//peersRef is for which is having connection with which\r\n\t\t\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tpeersForVideo.push(peer);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsetPeers(peersForVideo);\r\n\t\t\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\r\n\t\t\t\t\t\t//.on means recieving from backend\r\n\t\t\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\r\n\t\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\t\t\t// signal has been send to multiple now multiple users are sending back the signal to caller\r\n\t\t\t\t\t\t\tconst item = peersRef.current.find(\r\n\t\t\t\t\t\t\t\t(p) => p.peerID === payload.id\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}, []);\r\n\r\n\t\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\t\tconsole.log(\"CREATE PEER\");\r\n\t\t\tconst peer = new Peer({\r\n\t\t\t\tinitiator: true,\r\n\t\t\t\t//trickle wait for all the data to send makes it slow\r\n\t\t\t\ttrickle: false,\r\n\t\t\t\tstream,\r\n\t\t\t});\r\n\t\t\t//generates signal\r\n\t\t\t//sending to backend\r\n\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\t\tuserToSignal,\r\n\t\t\t\t\tcallerID,\r\n\t\t\t\t\tsignal,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn peer;\r\n\t\t}\r\n\r\n\t\tfunction addPeer(incomingSignal, callerID, stream) {\r\n\t\t\tconsole.log(\"Add Peer\");\r\n\t\t\tconst peer = new Peer({\r\n\t\t\t\tinitiator: false,\r\n\t\t\t\ttrickle: false,\r\n\t\t\t\tstream,\r\n\t\t\t});\r\n\t\t\t// 1 accepting the incoming signal that this will return the signal\r\n\t\t\tpeer.signal(incomingSignal);\r\n\r\n\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t\t});\r\n\t\t\treturn peer;\r\n\t\t}\r\n\r\n\t\t// console.log(\"PEERS \" + JSON.stringify(peers));\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<video style={vidStyle} muted ref={userVideo} autoPlay />\r\n\t\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\treturn <Video key={index} peer={peer} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div class=\"videoScreen\">\r\n\t\t\t<MeetingHeader\r\n\t\t\t\tsetMessenger={setMessenger}\r\n\t\t\t\t// peers={peers}\r\n\t\t\t\t// userVideo={userVideo}\r\n\t\t\t\t// Video={Video}\r\n\t\t\t\tisAdmin={isAdmin}\r\n\t\t\t\tid={id}\r\n                Room={Room}\r\n\t\t\t/>\r\n\t\t\t<MeetingFooter />\r\n\t\t\t{isAdmin && meetingInfoPopUp && (\r\n\t\t\t\t<MeetingInfo url={url} setMeetingInfoPopUp={setMeetingInfoPopUp} />\r\n\t\t\t)}\r\n\t\t\t{isMessenger ? (\r\n\t\t\t\t<Messenger\r\n\t\t\t\t\tsetMessenger={setMessenger}\r\n\t\t\t\t\t// messageList={messageList}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Alert />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default VideoPage;\r\n"]},"metadata":{},"sourceType":"module"}