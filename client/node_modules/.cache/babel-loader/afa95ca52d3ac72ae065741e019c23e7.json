{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\src\\\\components\\\\meetingHeader.jsx\",\n    _s2 = $RefreshSig$();\n\nimport react, { useEffect, useState, useRef } from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"; //use for time\n\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MeetingHeader({\n  setMessenger,\n  peers,\n  userVideo\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  console.log(userVideo);\n  console.log(peers);\n\n  const formatDate = () => {\n    return moment().format(\"LT\");\n  };\n\n  const [currentTime, setCurrentTime] = useState(() => {\n    formatDate();\n  });\n  useEffect(() => {\n    setInterval(() => setCurrentTime(formatDate()), 1000);\n    console.log(currentTime);\n  }, []);\n  const Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n  `;\n  const StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n  `;\n\n  const Video = props => {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      props.peer.on(\"stream\", stream => {\n        ref.current.srcObject = stream;\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(StyledVideo, {\n      playsInline: true,\n      autoPlay: true,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [peers.length !== 0 ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n        muted: true,\n        ref: userVideo,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n      class: \"video-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"frame-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        onClick: () => {\n          setMessenger(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items date-block\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MeetingHeader, \"PlZcq73dzo8ODxf/CKl0f2H1qbk=\");\n\n_c = MeetingHeader;\nexport default MeetingHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingHeader\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/src/components/meetingHeader.jsx"],"names":["react","useEffect","useState","useRef","PeopleIcon","ChatBubbleIcon","AccountCircleIcon","moment","styled","MeetingHeader","setMessenger","peers","userVideo","console","log","formatDate","format","currentTime","setCurrentTime","setInterval","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","length","map","index"],"mappings":"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","sourcesContent":["import react, { useEffect, useState, useRef } from \"react\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n//use for time\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction MeetingHeader({ setMessenger,peers,userVideo }) {\r\n  console.log(userVideo);\r\n  console.log(peers);\r\n  const formatDate = () => {\r\n    return moment().format(\"LT\");\r\n  };\r\n\r\n  const [currentTime, setCurrentTime] = useState(() => {\r\n    formatDate();\r\n  });\r\n  useEffect(() => {\r\n    setInterval(() => setCurrentTime(formatDate()), 1000);\r\n    console.log(currentTime);\r\n  }, []);\r\n\r\n  const Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n  `;\r\n\r\n  const StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n  `;\r\n\r\n  const Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n      props.peer.on(\"stream\", (stream) => {\r\n        ref.current.srcObject = stream;\r\n      });\r\n    }, []);\r\n\r\n    return <StyledVideo playsInline autoPlay ref={ref} />;\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <video class=\"video-container\" src=\"\"></video> */}\r\n      {/* <video class=\"video-container\" controls src=\"\"></video> */}\r\n\r\n      {peers.length !== 0 ? (\r\n        <Container >\r\n          <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n          {peers.map((peer, index) => {\r\n            return <Video key={index} peer={peer} />;\r\n          })}\r\n        </Container>\r\n      ) : (\r\n        <video class=\"video-container\" ></video>\r\n      )}\r\n\r\n      <div class=\"frame-header\">\r\n        <div class=\"header-items icon-block\">\r\n          <PeopleIcon />\r\n        </div>\r\n        <div\r\n          class=\"header-items icon-block\"\r\n          onClick={() => {\r\n            setMessenger(true);\r\n          }}\r\n        >\r\n          <ChatBubbleIcon />\r\n        </div>\r\n        <div class=\"header-items date-block\">{currentTime}</div>\r\n        <div class=\"header-items icon-block\">\r\n          <AccountCircleIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MeetingHeader;\r\n"]},"metadata":{},"sourceType":"module"}