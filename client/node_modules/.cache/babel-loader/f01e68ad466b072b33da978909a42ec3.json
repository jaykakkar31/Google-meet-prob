{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\client\\\\src\\\\components\\\\meetingHeader.js\",\n    _s3 = $RefreshSig$();\n\nimport react, { useEffect, useState, useRef } from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Room from \"./Room\"; //use for time\n\nimport moment from \"moment\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MeetingHeader({\n  setMessenger,\n  id,\n  isAdmin\n}) {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const vidStyle = {\n    // height: \"calc(50vh -90px)\",\n    // borderRadius:\"10px\"\n    height: \"45%\",\n    width: \"45%\",\n    padding: \"10px\",\n    paddingBottom: \"5px\"\n  };\n\n  const Video = props => {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      console.log(props.peer);\n      props.peer.on(\"stream\", stream => {\n        console.log(\"ENTE0RD\" + stream);\n        ref.current.srcObject = stream;\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"video\", {\n      style: vidStyle,\n      autoPlay: true,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  };\n\n  _s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  const videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n  };\n\n  const Room = props => {\n    _s2();\n\n    const numUsers = useRef();\n    const [peers, setPeers] = useState([]);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const roomID = props.id;\n    useEffect(() => {\n      socketRef.current = io.connect(\"http://localhost:9000\");\n      navigator.mediaDevices.getUserMedia({\n        video: videoConstraints,\n        audio: true\n      }).then(stream => {\n        userVideo.current.srcObject = stream;\n        console.log(\"USERVIDEO\" + stream); // LOGIC THAT USER HAS JOINED THE ROOM\n        //THIS EVENT Is NOT CACHED AT BACKEND\n        //.emit means sending  to backend\n\n        socketRef.current.emit(\"JOINED ROOM\");\n        socketRef.current.emit(\"join room\", roomID); // Recieve users from backened\n        // if (!props.isAdmin) {\n\n        socketRef.current.on(\"all users\", users => {\n          //peers is for how many videos are rendering\n          console.log(users.length);\n          numUsers.current = users.length + 1;\n          const peersForVideo = [];\n          users.forEach(userID => {\n            console.log(userID + \" USER ID OF USER IN THE ROOM \");\n            console.log(socketRef.current); //socketRef.current.id is the of user currently joined\n            // UserID  id's of all those inside the meeting\n\n            const peer = createPeer(userID, socketRef.current.id, stream); //peersRef is for which is having connection with which\n\n            peersRef.current.push({\n              peerID: userID,\n              peer\n            });\n            peersForVideo.push(peer);\n          });\n          setPeers(peersForVideo);\n          console.log(peers);\n        }); //PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\n        //.on means recieving from backend\n\n        socketRef.current.on(\"user joined\", payload => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer\n          });\n          setPeers(users => [...users, peer]);\n        });\n        socketRef.current.on(\"receiving returned signal\", payload => {\n          // signal has been send to multiple now multiple users are sending back the signal to caller\n          const item = peersRef.current.find(p => p.peerID === payload.id);\n          console.log(item);\n          item.peer.signal(payload.signal);\n        }); // }\n      });\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n      console.log(\"CREATE PEER\");\n      const peer = new Peer({\n        initiator: true,\n        //trickle wait for all the data to send makes it slow\n        trickle: false,\n        stream\n      }); //generates signal\n      //sending to backend\n\n      peer.on(\"signal\", signal => {\n        socketRef.current.emit(\"sending signal\", {\n          userToSignal,\n          callerID,\n          signal\n        });\n      });\n      return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n      console.log(\"Add Peer\");\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream\n      }); // 1 accepting the incoming signal that this will return the signal\n\n      peer.signal(incomingSignal);\n      peer.on(\"signal\", signal => {\n        socketRef.current.emit(\"returning signal\", {\n          signal,\n          callerID\n        });\n      });\n      return peer;\n    } // console.log(\"PEERS \" + JSON.stringify(peers));\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: vidStyle,\n        muted: true,\n        ref: userVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this);\n  };\n\n  _s2(Room, \"J6hlwmxX+ChjvgV8u4gyYhED/hs=\");\n\n  const formatDate = () => {\n    return moment().format(\"LT\");\n  };\n\n  const [currentTime, setCurrentTime] = useState(() => {\n    formatDate();\n  });\n  useEffect(() => {\n    setInterval(() => setCurrentTime(formatDate()), 1000);\n    console.log(currentTime);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Room, {\n      id: id,\n      isAdmin: isAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"frame-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        onClick: () => {\n          setMessenger(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items date-block\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(MeetingHeader, \"vw8Qg2G0cfGfODiQGue5zh5upcA=\");\n\n_c = MeetingHeader;\nexport default MeetingHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingHeader\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/client/src/components/meetingHeader.js"],"names":["react","useEffect","useState","useRef","PeopleIcon","ChatBubbleIcon","AccountCircleIcon","Room","moment","io","Peer","MeetingHeader","setMessenger","id","isAdmin","vidStyle","height","width","padding","paddingBottom","Video","props","ref","console","log","peer","on","stream","current","srcObject","videoConstraints","window","innerHeight","innerWidth","numUsers","peers","setPeers","socketRef","userVideo","peersRef","roomID","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","length","peersForVideo","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index","formatDate","format","currentTime","setCurrentTime","setInterval"],"mappings":"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","sourcesContent":["import react, { useEffect, useState, useRef } from \"react\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Room from \"./Room\";\r\n//use for time\r\nimport moment from \"moment\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nfunction MeetingHeader({ setMessenger, id, isAdmin }) {\r\n\tconst vidStyle = {\r\n\t\t// height: \"calc(50vh -90px)\",\r\n\t\t// borderRadius:\"10px\"\r\n\t\theight: \"45%\",\r\n\t\twidth: \"45%\",\r\n\r\n\t\tpadding: \"10px\",\r\n\t\tpaddingBottom: \"5px\",\r\n\t};\r\n\r\n\tconst Video = (props) => {\r\n\t\tconst ref = useRef();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconsole.log(props.peer);\r\n\t\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\t\tref.current.srcObject = stream;\r\n\t\t\t});\r\n\t\t}, []);\r\n\r\n\t\treturn <video style={vidStyle} autoPlay ref={ref} />;\r\n\t};\r\n\r\n\tconst videoConstraints = {\r\n\t\theight: window.innerHeight / 2,\r\n\t\twidth: window.innerWidth / 2,\r\n\t};\r\n\r\n\tconst Room = (props) => {\r\n\t\tconst numUsers = useRef();\r\n\t\tconst [peers, setPeers] = useState([]);\r\n\t\tconst socketRef = useRef();\r\n\t\tconst userVideo = useRef();\r\n\t\tconst peersRef = useRef([]);\r\n\t\tconst roomID = props.id;\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsocketRef.current = io.connect(\"http://localhost:9000\");\r\n\t\t\tnavigator.mediaDevices\r\n\t\t\t\t.getUserMedia({ video: videoConstraints, audio: true })\r\n\t\t\t\t.then((stream) => {\r\n\t\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\t\tconsole.log(\"USERVIDEO\" + stream);\r\n\t\t\t\t\t// LOGIC THAT USER HAS JOINED THE ROOM\r\n\r\n\t\t\t\t\t//THIS EVENT Is NOT CACHED AT BACKEND\r\n\t\t\t\t\t//.emit means sending  to backend\r\n\t\t\t\t\tsocketRef.current.emit(\"JOINED ROOM\");\r\n\t\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\t\t// Recieve users from backened\r\n\t\t\t\t\t// if (!props.isAdmin) {\r\n\r\n\t\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\t\t//peers is for how many videos are rendering\r\n\t\t\t\t\t\tconsole.log(users.length);\r\n\t\t\t\t\t\tnumUsers.current = users.length + 1;\r\n\t\t\t\t\t\tconst peersForVideo = [];\r\n\t\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\t\tconsole.log(socketRef.current);\r\n\t\t\t\t\t\t\t//socketRef.current.id is the of user currently joined\r\n\t\t\t\t\t\t\t// UserID  id's of all those inside the meeting\r\n\r\n\t\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\t\t//peersRef is for which is having connection with which\r\n\t\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tpeersForVideo.push(peer);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetPeers(peersForVideo);\r\n\t\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\r\n\t\t\t\t\t//.on means recieving from backend\r\n\t\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\r\n\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\t\t// signal has been send to multiple now multiple users are sending back the signal to caller\r\n\t\t\t\t\t\tconst item = peersRef.current.find((p) => p.peerID === payload.id);\r\n\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// }\r\n\t\t\t\t});\r\n\t\t}, []);\r\n\r\n\t\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\t\tconsole.log(\"CREATE PEER\");\r\n\t\t\tconst peer = new Peer({\r\n\t\t\t\tinitiator: true,\r\n\t\t\t\t//trickle wait for all the data to send makes it slow\r\n\t\t\t\ttrickle: false,\r\n\t\t\t\tstream,\r\n\t\t\t});\r\n\t\t\t//generates signal\r\n\t\t\t//sending to backend\r\n\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\t\tuserToSignal,\r\n\t\t\t\t\tcallerID,\r\n\t\t\t\t\tsignal,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn peer;\r\n\t\t}\r\n\r\n\t\tfunction addPeer(incomingSignal, callerID, stream) {\r\n\t\t\tconsole.log(\"Add Peer\");\r\n\t\t\tconst peer = new Peer({\r\n\t\t\t\tinitiator: false,\r\n\t\t\t\ttrickle: false,\r\n\t\t\t\tstream,\r\n\t\t\t});\r\n\t\t\t// 1 accepting the incoming signal that this will return the signal\r\n\t\t\tpeer.signal(incomingSignal);\r\n\r\n\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t\t});\r\n\t\t\treturn peer;\r\n\t\t}\r\n\r\n\t\t// console.log(\"PEERS \" + JSON.stringify(peers));\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<video style={vidStyle} muted ref={userVideo} autoPlay />\r\n\t\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\treturn <Video key={index} peer={peer} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst formatDate = () => {\r\n\t\treturn moment().format(\"LT\");\r\n\t};\r\n\r\n\tconst [currentTime, setCurrentTime] = useState(() => {\r\n\t\tformatDate();\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => setCurrentTime(formatDate()), 1000);\r\n\t\tconsole.log(currentTime);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Room id={id} isAdmin={isAdmin} />\r\n\r\n\t\t\t<div class=\"frame-header\">\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<PeopleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"header-items icon-block\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetMessenger(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChatBubbleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"header-items date-block\">{currentTime}</div>\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MeetingHeader;\r\n"]},"metadata":{},"sourceType":"module"}