{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\theight: calc(100vh - 90px);\n\t\twidth: 100vw;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n`;\n_c = Container;\nconst StyledVideo = styled.video`\n\theight: 50%;\n\twidth: 50%;\n`;\n_c2 = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    console.log(props.peer);\n    props.peer.on(\"stream\", stream => {\n      console.log(\"ENTE0RD\" + stream);\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}; // const videoConstraints = {\n// \theight: window.innerHeight / 2,\n// \twidth: window.innerWidth / 2,\n// };\n\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c3 = Video;\n\nconst Room = props => {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.id;\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      console.log(\"USERVIDEO\" + stream);\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          console.log(userID + \" USER ID OF USER IN THE ROOM \");\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n        console.log(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n        console.log(peers);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        console.log(item);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    console.log(\"CREATE PEER\");\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    console.log(\"ADD PEER\");\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  } // console.log(\"PEERS \" + JSON.stringify(peers));\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this), peers.map((peer, index) => {\n      return /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Room, \"CnCiOWEqFkEX/I5xE9Iw8SwijJY=\");\n\n_c4 = Room;\nexport default Room;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledVideo\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Room\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/src/components/Room.jsx"],"names":["React","useEffect","useRef","useState","io","Peer","styled","Container","div","StyledVideo","video","Video","props","ref","console","log","peer","on","stream","current","srcObject","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","id","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\theight: calc(100vh - 90px);\r\n\t\twidth: 100vw;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n\theight: 50%;\r\n\twidth: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n\tconst ref = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(props.peer);\r\n\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\tref.current.srcObject = stream;\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn <StyledVideo playsInline autoPlay ref={ref} />;\r\n};\r\n\r\n// const videoConstraints = {\r\n// \theight: window.innerHeight / 2,\r\n// \twidth: window.innerWidth / 2,\r\n// };\r\n\r\nconst Room = (props) => {\r\n\tconst [peers, setPeers] = useState([]);\r\n\tconst socketRef = useRef();\r\n\tconst userVideo = useRef();\r\n\tconst peersRef = useRef([]);\r\n\tconst roomID = props.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tsocketRef.current = io.connect(\"/\");\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getUserMedia({ video: true, audio: true })\r\n\t\t\t.then((stream) => {\r\n\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\tconsole.log(\"USERVIDEO\" +stream);\r\n\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\tconst peers = [];\r\n\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tpeers.push(peer);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetPeers(peers);\r\n\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\tconst item = peersRef.current.find((p) => p.peerID === payload.id);\r\n\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\tconsole.log(\"CREATE PEER\");\r\n\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: true,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\tuserToSignal,\r\n\t\t\t\tcallerID,\r\n\t\t\t\tsignal,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn peer;\r\n\t}\r\n\r\n\tfunction addPeer(incomingSignal, callerID, stream) {\r\n        console.log(\"ADD PEER\");\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: false,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t});\r\n\r\n\t\tpeer.signal(incomingSignal);\r\n\r\n\t\treturn peer;\r\n\t}\r\n\r\n\t// console.log(\"PEERS \" + JSON.stringify(peers));\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\treturn <Video key={index} peer={peer} />;\r\n\t\t\t})}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}