{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\src\\\\components\\\\meetingHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState, useRef } from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"; //use for time\n\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MeetingHeader({\n  setMessenger,\n  peers,\n  userVideo,\n  Video\n}) {\n  _s();\n\n  const Container = styled.div`\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\theight: calc(100vh - 90px);\n\t\twidth: 100vw;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t`;\n  const StyledVideo = styled.video`\n\t\theight: 50%;\n\t\twidth: 50%;\n\t`;\n  const vidStyle = {\n    height: \"50%\",\n    width: \"50%\"\n  };\n  const ref = useRef(); //\n  // const Video = (props) => {\n  // \tuseEffect(() => {\n  // \t\tconsole.log(props.peer);\n  // \t\tprops.peer.on(\"stream\", (stream) => {\n  // \t\t\tconsole.log(stream);\n  // \t\t\tref.current.srcObject = stream;\n  // \t\t});\n  // \t}, []);\n  // \treturn <StyledVideo playsInline autoPlay ref={ref} />;\n  // };\n\n  const formatDate = () => {\n    return moment().format(\"LT\");\n  };\n\n  const [currentTime, setCurrentTime] = useState(() => {\n    formatDate();\n  });\n  useEffect(() => {\n    setInterval(() => setCurrentTime(formatDate()), 1000);\n    console.log(currentTime);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n        muted: true,\n        ref: userVideo,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"frame-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        onClick: () => {\n          setMessenger(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items date-block\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MeetingHeader, \"XvHT0fNnKSZCmWKA41oeA1pjZaw=\");\n\n_c = MeetingHeader;\nexport default MeetingHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingHeader\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/src/components/meetingHeader.jsx"],"names":["react","useEffect","useState","useRef","PeopleIcon","ChatBubbleIcon","AccountCircleIcon","moment","styled","MeetingHeader","setMessenger","peers","userVideo","Video","Container","div","StyledVideo","video","vidStyle","height","width","ref","formatDate","format","currentTime","setCurrentTime","setInterval","console","log","map","peer","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA;AAAlC,CAAvB,EAAiE;AAAA;;AAChE,QAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,EAPC;AASA,QAAMC,WAAW,GAAGR,MAAM,CAACS,KAAM;AAClC;AACA;AACA,EAHC;AAIG,QAAMC,QAAQ,GAAC;AACXC,IAAAA,MAAM,EAAE,KADG;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAAf;AAIH,QAAMC,GAAG,GAAGlB,MAAM,EAAlB,CAlBgE,CAmBhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMmB,UAAU,GAAG,MAAM;AACxB,WAAOf,MAAM,GAAGgB,MAAT,CAAgB,IAAhB,CAAP;AACA,GAFD;;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,MAAM;AACpDoB,IAAAA,UAAU;AACV,GAF6C,CAA9C;AAGArB,EAAAA,SAAS,CAAC,MAAM;AACfyB,IAAAA,WAAW,CAAC,MAAMD,cAAc,CAACH,UAAU,EAAX,CAArB,EAAqC,IAArC,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACC;AAAA,4BAIC,QAAC,SAAD;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,KAAK,MAAlB;AAAmB,QAAA,GAAG,EAAEZ,SAAxB;AAAmC,QAAA,QAAQ,MAA3C;AAA4C,QAAA,WAAW;AAAvD;AAAA;AAAA;AAAA;AAAA,cADA,EAECD,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,4BAAO,QAAC,KAAD;AAAmB,UAAA,IAAI,EAAED;AAAzB,WAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAWC;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA,8BACC;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA,+BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AACC,QAAA,KAAK,EAAC,yBADP;AAEC,QAAA,OAAO,EAAE,MAAM;AACdrB,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,SAJF;AAAA,+BAMC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,cAJD,eAYC;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA,kBAAsCc;AAAtC;AAAA;AAAA;AAAA;AAAA,cAZD,eAaC;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA,+BACC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA;;GA3EQf,a;;KAAAA,a;AA6ET,eAAeA,aAAf","sourcesContent":["import react, { useEffect, useState, useRef } from \"react\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n//use for time\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction MeetingHeader({ setMessenger, peers, userVideo ,Video}) {\r\n\tconst Container = styled.div`\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\theight: calc(100vh - 90px);\r\n\t\twidth: 100vw;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t`;\r\n\r\n\tconst StyledVideo = styled.video`\r\n\t\theight: 50%;\r\n\t\twidth: 50%;\r\n\t`;\r\n    const vidStyle={\r\n        height: \"50%\",\r\n\t\twidth: \"50%\",\r\n    }\r\n\tconst ref = useRef();\r\n\t//\r\n\t// const Video = (props) => {\r\n\t// \tuseEffect(() => {\r\n\t// \t\tconsole.log(props.peer);\r\n\t// \t\tprops.peer.on(\"stream\", (stream) => {\r\n\t// \t\t\tconsole.log(stream);\r\n\t// \t\t\tref.current.srcObject = stream;\r\n\t// \t\t});\r\n\t// \t}, []);\r\n\r\n\t// \treturn <StyledVideo playsInline autoPlay ref={ref} />;\r\n\t// };\r\n\r\n\tconst formatDate = () => {\r\n\t\treturn moment().format(\"LT\");\r\n\t};\r\n\r\n\tconst [currentTime, setCurrentTime] = useState(() => {\r\n\t\tformatDate();\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => setCurrentTime(formatDate()), 1000);\r\n\t\tconsole.log(currentTime);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <div class=\"video-container\">\r\n\t\t\t\t<video  style={vidStyle}/>\t\t\r\n                \t</div> */}\r\n\t\t\t<Container>\r\n\t\t\t<StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\treturn <Video key={index} peer={peer} />;\r\n\t\t\t\t})}\r\n\t\t\t</Container>\r\n\r\n\t\t\t<div class=\"frame-header\">\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<PeopleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"header-items icon-block\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetMessenger(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChatBubbleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"header-items date-block\">{currentTime}</div>\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MeetingHeader;\r\n"]},"metadata":{},"sourceType":"module"}