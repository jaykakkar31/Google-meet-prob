{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\client\\\\src\\\\components\\\\meetingHeader.js\",\n    _s4 = $RefreshSig$();\n\nimport react, { useEffect, useState, useRef } from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"; // import Room from \"./Room\";\n//use for time\n\nimport moment from \"moment\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MeetingHeader({\n  setMessenger,\n  id,\n  isAdmin\n}) {\n  _s4();\n\n  var _s3 = $RefreshSig$();\n\n  const RoomState = () => {\n    _s3();\n\n    useEffect(() => {\n      var _s = $RefreshSig$(),\n          _s2 = $RefreshSig$();\n\n      const vidStyle = {\n        // height: \"calc(50vh -90px)\",\n        // borderRadius:\"10px\"\n        height: \"45%\",\n        width: \"45%\",\n        padding: \"10px\",\n        paddingBottom: \"5px\"\n      };\n\n      const Video = props => {\n        _s();\n\n        const ref = useRef();\n        useEffect(() => {\n          console.log(props.peer);\n          props.peer.on(\"stream\", stream => {\n            console.log(\"ENTE0RD\" + stream);\n            ref.current.srcObject = stream;\n          });\n        }, []);\n        return /*#__PURE__*/_jsxDEV(\"video\", {\n          style: vidStyle,\n          autoPlay: true,\n          ref: ref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }, this);\n      };\n\n      _s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n      const videoConstraints = {\n        height: window.innerHeight / 2,\n        width: window.innerWidth / 2\n      };\n\n      const Room = props => {\n        _s2();\n\n        const numUsers = useRef();\n        const [peers, setPeers] = useState([]);\n        const socketRef = useRef();\n        const userVideo = useRef();\n        const peersRef = useRef([]);\n        const roomID = props.id;\n        useEffect(() => {\n          socketRef.current = io.connect(\"http://localhost:9000\");\n          navigator.mediaDevices.getUserMedia({\n            video: videoConstraints,\n            audio: true\n          }).then(stream => {\n            userVideo.current.srcObject = stream;\n            console.log(\"USERVIDEO\" + stream); // LOGIC THAT USER HAS JOINED THE ROOM\n            //THIS EVENT Is NOT CACHED AT BACKEND\n            //.emit means sending  to backend\n\n            socketRef.current.emit(\"JOINED ROOM\");\n            socketRef.current.emit(\"join room\", roomID); // Recieve users from backened\n            // if (!props.isAdmin) {\n\n            socketRef.current.on(\"all users\", users => {\n              //peers is for how many videos are rendering\n              console.log(users.length);\n              numUsers.current = users.length + 1;\n              const peersForVideo = [];\n              users.forEach(userID => {\n                console.log(userID + \" USER ID OF USER IN THE ROOM \");\n                console.log(socketRef.current); //socketRef.current.id is the of user currently joined\n                // UserID  id's of all those inside the meeting\n\n                const peer = createPeer(userID, socketRef.current.id, stream); //peersRef is for which is having connection with which\n\n                peersRef.current.push({\n                  peerID: userID,\n                  peer\n                });\n                peersForVideo.push(peer);\n              });\n              setPeers(peersForVideo);\n              console.log(peers);\n            }); //PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\n            //.on means recieving from backend\n\n            socketRef.current.on(\"user joined\", payload => {\n              const peer = addPeer(payload.signal, payload.callerID, stream);\n              peersRef.current.push({\n                peerID: payload.callerID,\n                peer\n              });\n              setPeers(users => [...users, peer]);\n            });\n            socketRef.current.on(\"receiving returned signal\", payload => {\n              // signal has been send to multiple now multiple users are sending back the signal to caller\n              const item = peersRef.current.find(p => p.peerID === payload.id);\n              console.log(item);\n              item.peer.signal(payload.signal);\n            }); // }\n          });\n          return /*#__PURE__*/_jsxDEV(Room, {\n            id: id,\n            isAdmin: isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this);\n        }, []);\n\n        function createPeer(userToSignal, callerID, stream) {\n          console.log(\"CREATE PEER\");\n          const peer = new Peer({\n            initiator: true,\n            //trickle wait for all the data to send makes it slow\n            trickle: false,\n            stream\n          }); //generates signal\n          //sending to backend\n\n          peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", {\n              userToSignal,\n              callerID,\n              signal\n            });\n          });\n          return peer;\n        }\n\n        function addPeer(incomingSignal, callerID, stream) {\n          console.log(\"Add Peer\");\n          const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream\n          }); // 1 accepting the incoming signal that this will return the signal\n\n          peer.signal(incomingSignal);\n          peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", {\n              signal,\n              callerID\n            });\n          });\n          return peer;\n        } // console.log(\"PEERS \" + JSON.stringify(peers));\n\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            style: vidStyle,\n            muted: true,\n            ref: userVideo,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), peers.map((peer, index) => {\n            return /*#__PURE__*/_jsxDEV(Video, {\n              peer: peer\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this);\n      };\n\n      _s2(Room, \"J6hlwmxX+ChjvgV8u4gyYhED/hs=\");\n    }, []);\n  };\n\n  _s3(RoomState, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const formatDate = () => {\n    return moment().format(\"LT\");\n  };\n\n  const [currentTime, setCurrentTime] = useState(() => {\n    formatDate();\n  });\n  useEffect(() => {\n    setInterval(() => setCurrentTime(formatDate()), 1000);\n    console.log(currentTime);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RoomState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"frame-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        onClick: () => {\n          setMessenger(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items date-block\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-items icon-block\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 3\n  }, this);\n}\n\n_s4(MeetingHeader, \"vw8Qg2G0cfGfODiQGue5zh5upcA=\");\n\n_c = MeetingHeader;\nexport default MeetingHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingHeader\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/client/src/components/meetingHeader.js"],"names":["react","useEffect","useState","useRef","PeopleIcon","ChatBubbleIcon","AccountCircleIcon","moment","io","Peer","MeetingHeader","setMessenger","id","isAdmin","RoomState","vidStyle","height","width","padding","paddingBottom","Video","props","ref","console","log","peer","on","stream","current","srcObject","videoConstraints","window","innerHeight","innerWidth","Room","numUsers","peers","setPeers","socketRef","userVideo","peersRef","roomID","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","length","peersForVideo","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index","formatDate","format","currentTime","setCurrentTime","setInterval"],"mappings":"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","sourcesContent":["import react, { useEffect, useState, useRef } from \"react\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n// import Room from \"./Room\";\r\n//use for time\r\nimport moment from \"moment\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nfunction MeetingHeader({ setMessenger, id, isAdmin }) {\r\n\tconst RoomState = () => {\r\n\t\tuseEffect(() => {\r\n\t\t\tconst vidStyle = {\r\n\t\t\t\t// height: \"calc(50vh -90px)\",\r\n\t\t\t\t// borderRadius:\"10px\"\r\n\t\t\t\theight: \"45%\",\r\n\t\t\t\twidth: \"45%\",\r\n\r\n\t\t\t\tpadding: \"10px\",\r\n\t\t\t\tpaddingBottom: \"5px\",\r\n\t\t\t};\r\n\r\n\t\t\tconst Video = (props) => {\r\n\t\t\t\tconst ref = useRef();\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\tconsole.log(props.peer);\r\n\t\t\t\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\t\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\t\t\t\tref.current.srcObject = stream;\r\n\t\t\t\t\t});\r\n\t\t\t\t}, []);\r\n\r\n\t\t\t\treturn <video style={vidStyle} autoPlay ref={ref} />;\r\n\t\t\t};\r\n\r\n\t\t\tconst videoConstraints = {\r\n\t\t\t\theight: window.innerHeight / 2,\r\n\t\t\t\twidth: window.innerWidth / 2,\r\n\t\t\t};\r\n\r\n\t\t\tconst Room = (props) => {\r\n\t\t\t\tconst numUsers = useRef();\r\n\t\t\t\tconst [peers, setPeers] = useState([]);\r\n\t\t\t\tconst socketRef = useRef();\r\n\t\t\t\tconst userVideo = useRef();\r\n\t\t\t\tconst peersRef = useRef([]);\r\n\t\t\t\tconst roomID = props.id;\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\tsocketRef.current = io.connect(\"http://localhost:9000\");\r\n\t\t\t\t\tnavigator.mediaDevices\r\n\t\t\t\t\t\t.getUserMedia({ video: videoConstraints, audio: true })\r\n\t\t\t\t\t\t.then((stream) => {\r\n\t\t\t\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\t\t\t\tconsole.log(\"USERVIDEO\" + stream);\r\n\t\t\t\t\t\t\t// LOGIC THAT USER HAS JOINED THE ROOM\r\n\r\n\t\t\t\t\t\t\t//THIS EVENT Is NOT CACHED AT BACKEND\r\n\t\t\t\t\t\t\t//.emit means sending  to backend\r\n\t\t\t\t\t\t\tsocketRef.current.emit(\"JOINED ROOM\");\r\n\t\t\t\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\t\t\t\t// Recieve users from backened\r\n\t\t\t\t\t\t\t// if (!props.isAdmin) {\r\n\r\n\t\t\t\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\t\t\t\t//peers is for how many videos are rendering\r\n\t\t\t\t\t\t\t\tconsole.log(users.length);\r\n\t\t\t\t\t\t\t\tnumUsers.current = users.length + 1;\r\n\t\t\t\t\t\t\t\tconst peersForVideo = [];\r\n\t\t\t\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\t\t\t\tconsole.log(socketRef.current);\r\n\t\t\t\t\t\t\t\t\t//socketRef.current.id is the of user currently joined\r\n\t\t\t\t\t\t\t\t\t// UserID  id's of all those inside the meeting\r\n\r\n\t\t\t\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\t\t\t\t//peersRef is for which is having connection with which\r\n\t\t\t\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tpeersForVideo.push(peer);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tsetPeers(peersForVideo);\r\n\t\t\t\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t//PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\r\n\t\t\t\t\t\t\t//.on means recieving from backend\r\n\t\t\t\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\r\n\t\t\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\t\t\t\t// signal has been send to multiple now multiple users are sending back the signal to caller\r\n\t\t\t\t\t\t\t\tconst item = peersRef.current.find(\r\n\t\t\t\t\t\t\t\t\t(p) => p.peerID === payload.id\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\treturn <Room id={id} isAdmin={isAdmin} />;\r\n\t\t\t\t}, []);\r\n\r\n\t\t\t\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\t\t\t\tconsole.log(\"CREATE PEER\");\r\n\t\t\t\t\tconst peer = new Peer({\r\n\t\t\t\t\t\tinitiator: true,\r\n\t\t\t\t\t\t//trickle wait for all the data to send makes it slow\r\n\t\t\t\t\t\ttrickle: false,\r\n\t\t\t\t\t\tstream,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//generates signal\r\n\t\t\t\t\t//sending to backend\r\n\t\t\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\t\t\t\tuserToSignal,\r\n\t\t\t\t\t\t\tcallerID,\r\n\t\t\t\t\t\t\tsignal,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn peer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction addPeer(incomingSignal, callerID, stream) {\r\n\t\t\t\t\tconsole.log(\"Add Peer\");\r\n\t\t\t\t\tconst peer = new Peer({\r\n\t\t\t\t\t\tinitiator: false,\r\n\t\t\t\t\t\ttrickle: false,\r\n\t\t\t\t\t\tstream,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// 1 accepting the incoming signal that this will return the signal\r\n\t\t\t\t\tpeer.signal(incomingSignal);\r\n\r\n\t\t\t\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\t\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn peer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log(\"PEERS \" + JSON.stringify(peers));\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<video style={vidStyle} muted ref={userVideo} autoPlay />\r\n\t\t\t\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\t\t\treturn <Video key={index} peer={peer} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}, []);\r\n\t};\r\n\tconst formatDate = () => {\r\n\t\treturn moment().format(\"LT\");\r\n\t};\r\n\r\n\tconst [currentTime, setCurrentTime] = useState(() => {\r\n\t\tformatDate();\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => setCurrentTime(formatDate()), 1000);\r\n\t\tconsole.log(currentTime);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RoomState />\r\n\r\n\t\t\t<div class=\"frame-header\">\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<PeopleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"header-items icon-block\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetMessenger(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChatBubbleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"header-items date-block\">{currentTime}</div>\r\n\t\t\t\t<div class=\"header-items icon-block\">\r\n\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MeetingHeader;\r\n"]},"metadata":{},"sourceType":"module"}