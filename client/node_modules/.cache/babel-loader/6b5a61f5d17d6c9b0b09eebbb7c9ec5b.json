{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayka\\\\web development\\\\google-meet\\\\client\\\\src\\\\components\\\\Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport MeetingHeader from \"./meetingHeader\";\nimport MeetingFooter from \"./meetingFooter\";\nimport MeetingInfo from \"./meetingInfo\";\nimport Alert from \"./alert\";\nimport Messenger from \"./messenger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vidStyle = {\n  height: `264.15px`,\n  width: \"639.9px\",\n  padding: \"10px\",\n  paddingBottom: \"5px\",\n  objectFit: \"fill\"\n};\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  console.log(\"VIDEO CALLED\");\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      console.log(\"ENTE0RD\" + stream);\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    style: vidStyle,\n    muted: true,\n    ref: ref,\n    autoPlay: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Video;\nlet peer = null;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = ({\n  id,\n  isAdmin,\n  setMeetingInfoPopUp,\n  url,\n  meetingInfoPopUp\n}) => {\n  _s2();\n\n  const [isMessenger, setMessenger] = useState(false);\n  const numUsers = useRef();\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const screenStream = useRef();\n  const roomID = id;\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [isPresenting, setIsPresenting] = useState();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:9000\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      setStreamObj(stream);\n      userVideo.current.srcObject = stream;\n      console.log(\"USERVIDEO\" + stream); // LOGIC THAT USER HAS JOINED THE ROOM\n      //THIS EVENT Is NOT CACHED AT BACKEND\n      //.emit means sending  to backend\n\n      socketRef.current.emit(\"JOINED ROOM\");\n      socketRef.current.emit(\"join room\", roomID); // Recieve users from backened\n      // if (!props.isAdmin) {\n\n      socketRef.current.on(\"all users\", users => {\n        //peers is for how many videos are rendering\n        const peersForVideo = [];\n        users.forEach(userID => {\n          console.log(userID + \" USER ID OF USER IN THE ROOM \");\n          console.log(socketRef.current); //socketRef.current.id is the of user currently joined\n          // UserID  id's of all those inside the meeting\n\n          const peer = createPeer(userID, socketRef.current.id, stream); //peersRef is for which is having connection with which\n\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peersForVideo.push(peer);\n        });\n        setPeers(peersForVideo);\n        console.log(peers);\n      }); //PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\n      //.on means recieving from backend\n\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        // signal has been send to multiple now multiple users are sending back the signal to caller\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        console.log(item);\n        item.peer.signal(payload.signal);\n      }); // }\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    console.log(\"CREATE PEER\");\n    const peer = new Peer({\n      initiator: true,\n      //trickle wait for all the data to send makes it slow\n      trickle: false,\n      stream\n    }); //generates signal\n    //sending to backend\n\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    console.log(\"Add Peer\");\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    }); // 1 accepting the incoming signal that this will return the signal\n\n    peer.signal(incomingSignal);\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    return peer;\n  }\n\n  const screenShare = () => {\n    peers.map((peer, index) => {\n      console.log(peer);\n      navigator.mediaDevices.getDisplayMedia({\n        cursor: true\n      }).then(screenStream => {\n        peer.replaceTrack(streamObj.getVideoTracks()[0], screenStream.getVideoTracks()[0], streamObj); // setScreenCastStream(screenStream);\n        // screenStream.getTracks()[0].onended = () => {\n        // \tpeer.replaceTrack(\n        // \t\tscreenStream.getVideoTracks()[0],\n        // \t\tstreamObj.getVideoTracks()[0],\n        // \t\tstreamObj\n        // \t);\n        // };\n\n        setIsPresenting(true);\n      });\n    });\n  };\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach(function (track) {\n      track.stop();\n    });\n    peer.replaceTrack(screenCastStream.getVideoTracks()[0], streamObj.getVideoTracks()[0], streamObj);\n    setIsPresenting(false);\n  };\n\n  console.log(peers.callerID);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"videoScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: vidStyle,\n        muted: true,\n        ref: userVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer,\n          numUsers: numUsers.current\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetingHeader, {\n      setMessenger: setMessenger,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetingFooter, {\n      isPresenting: isPresenting,\n      screenShare: screenShare,\n      stopScreenShare: stopScreenShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }, this), isAdmin && meetingInfoPopUp && /*#__PURE__*/_jsxDEV(MeetingInfo, {\n      url: url,\n      setMeetingInfoPopUp: setMeetingInfoPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this), isMessenger ? /*#__PURE__*/_jsxDEV(Messenger, {\n      setMessenger: setMessenger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Room, \"EBKiqFYf1VmrRt0twKyVEw1nJLo=\");\n\n_c2 = Room;\nexport default Room;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"sources":["C:/Users/jayka/web development/google-meet/client/src/components/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","MeetingHeader","MeetingFooter","MeetingInfo","Alert","Messenger","vidStyle","height","width","padding","paddingBottom","objectFit","Video","props","ref","console","log","peer","on","stream","current","srcObject","videoConstraints","window","innerHeight","innerWidth","Room","id","isAdmin","setMeetingInfoPopUp","url","meetingInfoPopUp","isMessenger","setMessenger","numUsers","peers","setPeers","socketRef","userVideo","peersRef","screenStream","roomID","streamObj","setStreamObj","screenCastStream","setScreenCastStream","isPresenting","setIsPresenting","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","peersForVideo","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","screenShare","map","index","getDisplayMedia","cursor","replaceTrack","getVideoTracks","stopScreenShare","track","stop"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport MeetingHeader from \"./meetingHeader\";\r\nimport MeetingFooter from \"./meetingFooter\";\r\nimport MeetingInfo from \"./meetingInfo\";\r\nimport Alert from \"./alert\";\r\nimport Messenger from \"./messenger\";\r\n\r\nconst vidStyle = {\r\n\theight: `264.15px`,\r\n\twidth: \"639.9px\",\r\n\tpadding: \"10px\",\r\n\tpaddingBottom: \"5px\",\r\n\tobjectFit: \"fill\",\r\n};\r\n\r\nconst Video = (props) => {\r\n\tconst ref = useRef();\r\n\tconsole.log(\"VIDEO CALLED\");\r\n\tuseEffect(() => {\r\n\t\tprops.peer.on(\"stream\", (stream) => {\r\n\t\t\tconsole.log(\"ENTE0RD\" + stream);\r\n\t\t\tref.current.srcObject = stream;\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn <video style={vidStyle} muted ref={ref} autoPlay />;\r\n};\r\n\r\nlet peer = null;\r\n\r\nconst videoConstraints = {\r\n\theight: window.innerHeight / 2,\r\n\twidth: window.innerWidth / 2,\r\n};\r\n\r\nconst Room = ({ id, isAdmin, setMeetingInfoPopUp, url, meetingInfoPopUp }) => {\r\n\tconst [isMessenger, setMessenger] = useState(false);\r\n\r\n\tconst numUsers = useRef();\r\n\tconst [peers, setPeers] = useState([]);\r\n\tconst socketRef = useRef();\r\n\tconst userVideo = useRef();\r\n\tconst peersRef = useRef([]);\r\n\tconst screenStream = useRef();\r\n\tconst roomID = id;\r\n\tconst [streamObj, setStreamObj] = useState();\r\n\tconst [screenCastStream, setScreenCastStream] = useState();\r\n\tconst [isPresenting, setIsPresenting] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tsocketRef.current = io.connect(\"http://localhost:9000\");\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getUserMedia({ video: videoConstraints, audio: true })\r\n\t\t\t.then((stream) => {\r\n\t\t\t\tsetStreamObj(stream);\r\n\t\t\t\tuserVideo.current.srcObject = stream;\r\n\t\t\t\tconsole.log(\"USERVIDEO\" + stream);\r\n\t\t\t\t// LOGIC THAT USER HAS JOINED THE ROOM\r\n\r\n\t\t\t\t//THIS EVENT Is NOT CACHED AT BACKEND\r\n\t\t\t\t//.emit means sending  to backend\r\n\t\t\t\tsocketRef.current.emit(\"JOINED ROOM\");\r\n\t\t\t\tsocketRef.current.emit(\"join room\", roomID);\r\n\t\t\t\t// Recieve users from backened\r\n\t\t\t\t// if (!props.isAdmin) {\r\n\r\n\t\t\t\tsocketRef.current.on(\"all users\", (users) => {\r\n\t\t\t\t\t//peers is for how many videos are rendering\r\n\r\n\t\t\t\t\tconst peersForVideo = [];\r\n\t\t\t\t\tusers.forEach((userID) => {\r\n\t\t\t\t\t\tconsole.log(userID + \" USER ID OF USER IN THE ROOM \");\r\n\t\t\t\t\t\tconsole.log(socketRef.current);\r\n\t\t\t\t\t\t//socketRef.current.id is the of user currently joined\r\n\t\t\t\t\t\t// UserID  id's of all those inside the meeting\r\n\r\n\t\t\t\t\t\tconst peer = createPeer(userID, socketRef.current.id, stream);\r\n\t\t\t\t\t\t//peersRef is for which is having connection with which\r\n\t\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\t\tpeerID: userID,\r\n\t\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tpeersForVideo.push(peer);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetPeers(peersForVideo);\r\n\t\t\t\t\tconsole.log(peers);\r\n\t\t\t\t});\r\n\t\t\t\t//PERSON IN THE ROOM GETS NOTIFIED THAT SOMEBODY HAS JOINED\r\n\t\t\t\t//.on means recieving from backend\r\n\t\t\t\tsocketRef.current.on(\"user joined\", (payload) => {\r\n\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\r\n\r\n\t\t\t\t\tpeersRef.current.push({\r\n\t\t\t\t\t\tpeerID: payload.callerID,\r\n\t\t\t\t\t\tpeer,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetPeers((users) => [...users, peer]);\r\n\t\t\t\t});\r\n\t\t\t\tsocketRef.current.on(\"receiving returned signal\", (payload) => {\r\n\t\t\t\t\t// signal has been send to multiple now multiple users are sending back the signal to caller\r\n\t\t\t\t\tconst item = peersRef.current.find((p) => p.peerID === payload.id);\r\n\t\t\t\t\tconsole.log(item);\r\n\r\n\t\t\t\t\titem.peer.signal(payload.signal);\r\n\t\t\t\t});\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction createPeer(userToSignal, callerID, stream) {\r\n\t\tconsole.log(\"CREATE PEER\");\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: true,\r\n\t\t\t//trickle wait for all the data to send makes it slow\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\t\t//generates signal\r\n\t\t//sending to backend\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"sending signal\", {\r\n\t\t\t\tuserToSignal,\r\n\t\t\t\tcallerID,\r\n\t\t\t\tsignal,\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn peer;\r\n\t}\r\n\r\n\tfunction addPeer(incomingSignal, callerID, stream) {\r\n\t\tconsole.log(\"Add Peer\");\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: false,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream,\r\n\t\t});\r\n\t\t// 1 accepting the incoming signal that this will return the signal\r\n\t\tpeer.signal(incomingSignal);\r\n\r\n\t\tpeer.on(\"signal\", (signal) => {\r\n\t\t\tsocketRef.current.emit(\"returning signal\", { signal, callerID });\r\n\t\t});\r\n\t\treturn peer;\r\n\t}\r\n\r\n\tconst screenShare = () => {\r\n\t\tpeers.map((peer, index) => {\r\n            console.log(peer);\r\n\t\t\tnavigator.mediaDevices\r\n\t\t\t\t.getDisplayMedia({ cursor: true })\r\n\t\t\t\t.then((screenStream) => {\r\n\t\t\t\t\tpeer.replaceTrack(\r\n\t\t\t\t\t\tstreamObj.getVideoTracks()[0],\r\n\t\t\t\t\t\tscreenStream.getVideoTracks()[0],\r\n\t\t\t\t\t\tstreamObj\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// setScreenCastStream(screenStream);\r\n\t\t\t\t\t// screenStream.getTracks()[0].onended = () => {\r\n\t\t\t\t\t// \tpeer.replaceTrack(\r\n\t\t\t\t\t// \t\tscreenStream.getVideoTracks()[0],\r\n\t\t\t\t\t// \t\tstreamObj.getVideoTracks()[0],\r\n\t\t\t\t\t// \t\tstreamObj\r\n\t\t\t\t\t// \t);\r\n\t\t\t\t\t// };\r\n\t\t\t\t\tsetIsPresenting(true);\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\tconst stopScreenShare = () => {\r\n\t\tscreenCastStream.getVideoTracks().forEach(function (track) {\r\n\t\t\ttrack.stop();\r\n\t\t});\r\n\t\tpeer.replaceTrack(\r\n\t\t\tscreenCastStream.getVideoTracks()[0],\r\n\t\t\tstreamObj.getVideoTracks()[0],\r\n\t\t\tstreamObj\r\n\t\t);\r\n\t\tsetIsPresenting(false);\r\n\t};\r\n\r\n\tconsole.log(peers.callerID);\r\n\treturn (\r\n\t\t<div class=\"videoScreen\">\r\n\t\t\t{/* {isPresenting ? (\r\n\t\t\t\t<video\r\n\t\t\t\t\t// style={{ height: \"calc(100vh -90px)\", width: \"100%\" }}\r\n\t\t\t\t/>\r\n\t\t\t) : ( */}\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<video style={vidStyle} muted ref={userVideo} autoPlay />\r\n\t\t\t\t{peers.map((peer, index) => {\r\n\t\t\t\t\treturn <Video key={index} peer={peer} numUsers={numUsers.current} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{/* )} */}\r\n\t\t\t<MeetingHeader setMessenger={setMessenger} id={id} />\r\n\t\t\t<MeetingFooter\r\n\t\t\t\tisPresenting={isPresenting}\r\n\t\t\t\tscreenShare={screenShare}\r\n\t\t\t\tstopScreenShare={stopScreenShare}\r\n\t\t\t/>\r\n\t\t\t{isAdmin && meetingInfoPopUp && (\r\n\t\t\t\t<MeetingInfo url={url} setMeetingInfoPopUp={setMeetingInfoPopUp} />\r\n\t\t\t)}\r\n\t\t\t{isMessenger ? <Messenger setMessenger={setMessenger} /> : <Alert />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}